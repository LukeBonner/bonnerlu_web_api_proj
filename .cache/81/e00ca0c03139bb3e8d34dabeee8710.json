{"id":"zBTO","dependencies":[{"name":"E:\\school work\\CIS371\\tsHTML-Bonnerlu\\package.json","includedInParent":true,"mtime":1613798949730},{"name":"E:\\school work\\CIS371\\tsHTML-Bonnerlu\\node_modules\\chai\\package.json","includedInParent":true,"mtime":1613798945529},{"name":"./inspect","loc":{"line":11,"column":22},"parent":"E:\\school work\\CIS371\\tsHTML-Bonnerlu\\node_modules\\chai\\lib\\chai\\utils\\compareByInspect.js","resolved":"E:\\school work\\CIS371\\tsHTML-Bonnerlu\\node_modules\\chai\\lib\\chai\\utils\\inspect.js"}],"generated":{"js":"var e=require(\"./inspect\");module.exports=function(r,n){return e(r)<e(n)?-1:1};"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/chai/lib/chai/utils/compareByInspect.js","original":{"line":11,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/chai/lib/chai/utils/compareByInspect.js","name":"inspect","original":{"line":11,"column":4},"generated":{"line":1,"column":4}},{"source":"../node_modules/chai/lib/chai/utils/compareByInspect.js","name":"require","original":{"line":11,"column":14},"generated":{"line":1,"column":6}},{"source":"../node_modules/chai/lib/chai/utils/compareByInspect.js","original":{"line":11,"column":22},"generated":{"line":1,"column":14}},{"source":"../node_modules/chai/lib/chai/utils/compareByInspect.js","name":"module","original":{"line":29,"column":0},"generated":{"line":1,"column":27}},{"source":"../node_modules/chai/lib/chai/utils/compareByInspect.js","name":"exports","original":{"line":29,"column":7},"generated":{"line":1,"column":34}},{"source":"../node_modules/chai/lib/chai/utils/compareByInspect.js","original":{"line":29,"column":17},"generated":{"line":1,"column":42}},{"source":"../node_modules/chai/lib/chai/utils/compareByInspect.js","name":"a","original":{"line":29,"column":43},"generated":{"line":1,"column":51}},{"source":"../node_modules/chai/lib/chai/utils/compareByInspect.js","name":"b","original":{"line":29,"column":46},"generated":{"line":1,"column":53}},{"source":"../node_modules/chai/lib/chai/utils/compareByInspect.js","name":"inspect","original":{"line":30,"column":9},"generated":{"line":1,"column":56}},{"source":"../node_modules/chai/lib/chai/utils/compareByInspect.js","name":"inspect","original":{"line":30,"column":9},"generated":{"line":1,"column":63}},{"source":"../node_modules/chai/lib/chai/utils/compareByInspect.js","name":"a","original":{"line":30,"column":17},"generated":{"line":1,"column":65}},{"source":"../node_modules/chai/lib/chai/utils/compareByInspect.js","name":"inspect","original":{"line":30,"column":22},"generated":{"line":1,"column":68}},{"source":"../node_modules/chai/lib/chai/utils/compareByInspect.js","name":"b","original":{"line":30,"column":30},"generated":{"line":1,"column":70}},{"source":"../node_modules/chai/lib/chai/utils/compareByInspect.js","original":{"line":30,"column":36},"generated":{"line":1,"column":74}},{"source":"../node_modules/chai/lib/chai/utils/compareByInspect.js","original":{"line":30,"column":40},"generated":{"line":1,"column":76}}],"sources":{"../node_modules/chai/lib/chai/utils/compareByInspect.js":"/*!\n * Chai - compareByInspect utility\n * Copyright(c) 2011-2016 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar inspect = require('./inspect');\n\n/**\n * ### .compareByInspect(mixed, mixed)\n *\n * To be used as a compareFunction with Array.prototype.sort. Compares elements\n * using inspect instead of default behavior of using toString so that Symbols\n * and objects with irregular/missing toString can still be sorted without a\n * TypeError.\n *\n * @param {Mixed} first element to compare\n * @param {Mixed} second element to compare\n * @returns {Number} -1 if 'a' should come before 'b'; otherwise 1\n * @name compareByInspect\n * @namespace Utils\n * @api public\n */\n\nmodule.exports = function compareByInspect(a, b) {\n  return inspect(a) < inspect(b) ? -1 : 1;\n};\n"},"lineCount":null}},"error":null,"hash":"32f085fa801b74a285a5c9e10ca22c6f","cacheData":{"env":{}}}